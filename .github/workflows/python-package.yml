name: Python package

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:
  build:
    runs-on: ubuntu-latest
    strategy:
      fail-fast: false
      matrix:
        python-version: ["3.9", "3.10", "3.11"]

    steps:
    - uses: actions/checkout@v4

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v3
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        python -m pip install flake8 pytest
        if [ -f requirements.txt ]; then pip install -r requirements.txt; fi

    - name: Lint with flake8
      run: |
        # stop the build if there are Python syntax errors or undefined names
        flake8 . --count --select=E9,F63,F7,F82 --show-source --statistics
        # exit-zero treats all errors as warnings. The GitHub editor is 127 chars wide
        flake8 . --count --exit-zero --max-complexity=10 --max-line-length=127 --statistics

    - name: Test with pytest
      run: |
        pytest

    # Bandit security linter (checks Python code for security vulnerabilities)
    - name: Install bandit for security analysis
      run: |
        pip install bandit

    - name: Run bandit security analysis
      run: |
        bandit -r . -ll

    # OWASP ZAP - Automated Security Scanning
    - name: Set up OWASP ZAP container
      uses: docker://owasp/zap2docker-stable:latest

    - name: Run ZAP Security Scan
      run: |
         docker run -u zap --rm -v $(pwd):/zap/wrk:rw owasp/zap2docker zap-full-scan.py -t https://software-engineering-devops-project.onrender.com -g gen.conf -r zap-report.html
      env:
        ZAP_API_KEY: ${{ secrets.ZAP_API_KEY }}

    # Optional: Save the ZAP report as an artifact
    - name: Upload ZAP report
      uses: actions/upload-artifact@v4
      with:
        name: zap-report
        path: zap-report.html
